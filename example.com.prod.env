# Replace all _CHANGE_ME_ with your values. The rest can be left as is.

# Project name that should be equivalent to domain name (and cloudflare zone), GitLab project name (and Docker repository)
PROJECT='example.com'

##############################
# Infrastructure configuration
##############################

# Hetzner Cloud token
# https://docs.hetzner.com/cloud/api/getting-started/generating-api-token/
TF_VAR_hcloud_token='_CHANGE_ME_'

# Cloudflare zone token (from the dashboard)
TF_VAR_cloudflare_zone="${PROJECT}"
TF_VAR_cloudflare_zone_id='_CHANGE_ME_'
TF_VAR_cloudflare_account_id='_CHANGE_ME_'

# API token
# https://developers.cloudflare.com/fundamentals/api/get-started/create-token/
# The follwing permissions are required (with edit action):
#   Workers R2 storage
#   Cloudflare Tunnel
#   Zero Trust
#   Access: Organizations, Identity Providers, and Groups
#   Access: Apps and Policies
#   Zone Settings
#   Zone
#   DSN
TF_VAR_cloudflare_token='_CHANGE_ME_'

# Cloudflare R2 tokens (you need to roll them separately after you created API token)
# https://developers.cloudflare.com/r2/api/s3/tokens/
TF_VAR_s3_access_key='_CHANGE_ME_'
TF_VAR_s3_secret_key='_CHANGE_ME_'

# Allow access to backup system and SSH using Google IDP
# https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/google/
TF_VAR_google_client_id='_CHANGE_ME_.apps.googleusercontent.com'
TF_VAR_google_client_secret='_CHANGE_ME_'

# Allow access to backup system and SSH using GitHub IDP
# https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/github/
TF_VAR_github_client_id='_CHANGE_ME_'
TF_VAR_github_client_secret='_CHANGE_ME_'

# Cloudflare Zero Trust service tokens to allow seamless access to SSH
# https://developers.cloudflare.com/cloudflare-one/identity/service-tokens/
CLOUDFLARE_SERVICE_TOKEN_ID='_CHANGE_ME_'
CLOUDFLARE_SERVICE_TOKEN_SECRET='_CHANGE_ME_'

# List of user emails who can have the access to Kopia or SSH (using Google or GitHub IDP)
TF_VAR_cloudflare_admin_emails='["_CHANGE_ME_@example.com"]'

# Repository credentials, like Gitlab
# https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html
# Required permissions:
#   read_registry
#   write_registry
DOCKER_REGISTRY='registry.gitlab.com'
DOCKER_USER='_CHANGE_ME_'
DOCKER_PASSWORD='_CHANGE_ME_'

TF_VAR_docker_registry="${DOCKER_REGISTRY}"
TF_VAR_docker_user="${DOCKER_USER}"
TF_VAR_docker_password="${DOCKER_PASSWORD}"

#########################################################
# Docker setup, including Ghost, MariaDB, Kopia and Nginx
#########################################################

# DANGER ZONE
# Set 'true' to make Kopia drop existing DB and restore from dump on restart
MYSQL_RESTORE_FROM_BACKUP_ON_START='false'

# SMTP setting for Mailgun are available as soon as you add your domain there
# https://mailgun.com/
MAIL_FROM="'_CHANGE ME_' <hello@${PROJECT}>"
SMTP_HOST='smtp.eu.mailgun.org'
SMTP_PORT='465'
SMTP_USER='postmaster@_CHANGE_ME_.example.com'
SMTP_PASS='_CHANGE_ME_'

# DB credentials that will be created and used
MYSQL_HOST='mariadb'
MYSQL_PORT='3306'
MYSQL_DATABASE='ghostdata'
MYSQL_ROOT_USER='root'
MYSQL_ROOT_PASSWORD='_CHANGE_ME_'
MYSQL_USER='ghost'
MYSQL_PASSWORD='_CHANGE_ME_'

# S3 properties for data storage and backup
S3_ENDPOINT="${TF_VAR_cloudflare_account_id}.r2.cloudflarestorage.com"
S3_REGION='us-east-1'
S3_BUCKET="${PROJECT//./-}-data"
TF_VAR_app_bucket_name="${S3_BUCKET}"

S3_BACKUP_BUCKET="${PROJECT//./-}-backup"
TF_VAR_app_backup_bucket_name="${S3_BACKUP_BUCKET}"
S3_ACCESS_KEY="${TF_VAR_s3_access_key}"
S3_SECRET_KEY="${TF_VAR_s3_secret_key}"

# Credentials to access Kopia UI. The UI will be still protected by Cloudflare and IDP
KOPIA_SERVER_USERNAME='backup'
KOPIA_SERVER_PASSWORD='_CHANGE_ME_'

# Credentials to protect Kopia repository
KOPIA_REPOSITORY_USER='repo'
KOPIA_REPOSITORY_SECRET='_CHANGE_ME_'

# Internal folder in Kopia image where scripts and configuration is copied
APP_DIR='/app'

# Directory on the node where Docker volumes will be mounted
BASE_PATH='/opt/app'
TF_VAR_node_base_path="${BASE_PATH}"

# Mount folders needed for backup
MYSQL_BACKUP_FOLDER_INTERNAL='/var/mariadb/backup'
MYSQL_BACKUP_FOLDER_SHARED="${BASE_PATH}/mariadb/backup"
MYSQL_BACKUP_FOLDER_ON_KOPIA='/data/mariadb/backup'
GHOST_BACKUP_FOLDER_ON_KOPIA='/data/ghost/content'
GHOST_CONTENT_FOLDER_SHARED="${BASE_PATH}/ghost/content"

# Home URL for Ghost
URL="https://${PROJECT}"

# Folder where SSH keys are stored
SSH_KEYS_FOLDER=~/.ssh/ghost
TF_VAR_keys_folder="${SSH_KEYS_FOLDER}"